service: nft-server

package:
  individually: true

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-central-1
  tracing:
    apiGateway: true
    lambda: true
  memorySize: 512
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
          Resource: '*'

  environment:
    DATABASE_URL_NFT: ${file(./env.js):DATABASE_URL_NFT}
    DATABASE_URL_INDEXA: ${file(./env.js):DATABASE_URL_INDEXA}
  httpApi:
    metrics: true

functions:
  # ---------- TRIGGER HANDLERS
  triggerCollections:
    handler: src/handlers/triggerCollections.handler
    description: save static and dynamic (eg floor) data for top N-collections
    timeout: 120
    events:
      # every 5 min
      - schedule: cron(*/5 * * * ? *)
    environment:
      RESERVOIR_API: ${file(./env.js):RESERVOIR_API}

  triggerMonitor:
    handler: src/handlers/triggerMonitor.handler
    description: check if nft_trades is outdated
    timeout: 120
    # events:
    #   # every 15 min
    #   - schedule: cron(*/15 * * * ? *)
    environment:
      NFT_TRADES_WEBHOOK: ${file(./env.js):NFT_TRADES_WEBHOOK}

  triggerWashTrades:
    handler: src/handlers/triggerWashTrades.handler
    description: flag wash trades
    timeout: 120
    # events:
    #   # every 5 min
    #   - schedule: cron(*/5 * * * ? *)

  # ---------- GET HANDLERS
  getCollections:
    handler: src/handlers/getCollections.handler
    description: get latest data for each collection
    timeout: 30
    events:
      - httpApi:
          method: get
          path: /collections

  getCollection:
    handler: src/handlers/getCollection.handler
    description: get static collection info
    timeout: 30
    events:
      - httpApi:
          method: get
          path: /collection/{collectionId}

  getFloorHistory:
    handler: src/handlers/getFloorHistory.handler
    description: get floor price history for collectionId
    timeout: 30
    events:
      - httpApi:
          method: get
          path: /floorHistory/{collectionId}

  getSales:
    handler: src/handlers/getSales.handler
    description: get detailed sales data for a collectionId
    timeout: 30
    events:
      - httpApi:
          method: get
          path: /sales/{collectionId}

  getStats:
    handler: src/handlers/getStats.handler
    description: get daily aggregated statistics for a given collectionId
    timeout: 30
    events:
      - httpApi:
          method: get
          path: /stats/{collectionId}

  getVolume:
    handler: src/handlers/getVolume.handler
    description: get volume per collection
    timeout: 30
    events:
      - httpApi:
          method: get
          path: /volume

  getExchangeStats:
    handler: src/handlers/getExchangeStats.handler
    description: get volume and trade count per marketplace for 1day,7day,30day
    timeout: 30
    events:
      - httpApi:
          method: get
          path: /exchangeStats

  getExchangeVolume:
    handler: src/handlers/getExchangeVolume.handler
    description: get daily volume history per marketplace
    timeout: 30
    events:
      - httpApi:
          method: get
          path: /exchangeVolume

custom:
  stage: ${opt:stage, self:provider.stage}
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'
    excludeFiles: src/**/*.test.js
  prune:
    automatic: true
    number: 5

plugins:
  - serverless-webpack
  - serverless-prune-plugin
